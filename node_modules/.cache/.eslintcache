[{"E:\\tamrin\\react1\\my-react\\src\\index.js":"1","E:\\tamrin\\react1\\my-react\\src\\App.js":"2","E:\\tamrin\\react1\\my-react\\src\\Error404.js":"3","E:\\tamrin\\react1\\my-react\\src\\Navbar.js":"4","E:\\tamrin\\react1\\my-react\\src\\Home.js":"5","E:\\tamrin\\react1\\my-react\\src\\Loading.js":"6","E:\\tamrin\\react1\\my-react\\src\\Routers.js":"7","E:\\tamrin\\react1\\my-react\\src\\OneProduct.js":"8","E:\\tamrin\\react1\\my-react\\src\\ShoppingCart.js":"9","E:\\tamrin\\react1\\my-react\\src\\LoginSignup.js":"10","E:\\tamrin\\react1\\my-react\\src\\Address.js":"11","E:\\tamrin\\react1\\my-react\\src\\CheckOut.js":"12","E:\\tamrin\\react1\\my-react\\src\\Setting.js":"13","E:\\tamrin\\react1\\my-react\\src\\ChangeProfile.js":"14","E:\\tamrin\\react1\\my-react\\src\\UploadAvatar.js":"15","E:\\tamrin\\react1\\my-react\\src\\ChangePassword.js":"16","E:\\tamrin\\react1\\my-react\\src\\store.js":"17","E:\\tamrin\\react1\\my-react\\src\\reducer.js":"18","E:\\tamrin\\react1\\my-react\\src\\Profile.js":"19","E:\\tamrin\\react1\\my-react\\src\\Orders.js":"20","E:\\tamrin\\react1\\my-react\\src\\OneOrder.js":"21"},{"size":414,"mtime":1676120864633,"results":"22","hashOfConfig":"23"},{"size":866,"mtime":1677257700510,"results":"24","hashOfConfig":"23"},{"size":981,"mtime":1677257674159,"results":"25","hashOfConfig":"23"},{"size":3770,"mtime":1677065014194,"results":"26","hashOfConfig":"23"},{"size":4759,"mtime":1677258072180,"results":"27","hashOfConfig":"23"},{"size":455,"mtime":1674839670652,"results":"28","hashOfConfig":"23"},{"size":1993,"mtime":1676908490065,"results":"29","hashOfConfig":"23"},{"size":11689,"mtime":1676665267166,"results":"30","hashOfConfig":"23"},{"size":11730,"mtime":1676723622149,"results":"31","hashOfConfig":"23"},{"size":15034,"mtime":1676123050310,"results":"32","hashOfConfig":"23"},{"size":8246,"mtime":1677253182261,"results":"33","hashOfConfig":"23"},{"size":8996,"mtime":1677257569262,"results":"34","hashOfConfig":"23"},{"size":4217,"mtime":1675870365226,"results":"35","hashOfConfig":"23"},{"size":7063,"mtime":1677253543155,"results":"36","hashOfConfig":"23"},{"size":3642,"mtime":1677254473850,"results":"37","hashOfConfig":"23"},{"size":4973,"mtime":1677253747998,"results":"38","hashOfConfig":"23"},{"size":833,"mtime":1676485862612,"results":"39","hashOfConfig":"23"},{"size":1860,"mtime":1676489743203,"results":"40","hashOfConfig":"23"},{"size":3291,"mtime":1677066044026,"results":"41","hashOfConfig":"23"},{"size":2852,"mtime":1677066734851,"results":"42","hashOfConfig":"23"},{"size":6212,"mtime":1676740333508,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"vz2p3a",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"E:\\tamrin\\react1\\my-react\\src\\index.js",[],[],[],"E:\\tamrin\\react1\\my-react\\src\\App.js",["116","117"],[],"E:\\tamrin\\react1\\my-react\\src\\Error404.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\Navbar.js",["118"],[],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { username, token } = useSelector((state) => state.info);\r\n  const basket = useSelector((state) => state.basket);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"menu\">\r\n        <ol className=\"ol-menu\" style={{ marginLeft: \"20px\" }}>\r\n          <li\r\n            className=\"menu-item\"\r\n            style={{ marginRight: \"47rem\" }}\r\n            onClick={() => navigate(\"/\")}\r\n          >\r\n            <a\r\n              className=\"a-menu\"\r\n              href=\"#0\"\r\n              style={{ textDecoration: \"none\", fontWeight: \"bold\" }}\r\n            >\r\n              Home\r\n            </a>\r\n          </li>\r\n\r\n          <li\r\n            className=\"menu-item\"\r\n            onClick={() => {\r\n              navigate(\"/cart\");\r\n            }}\r\n          >\r\n            <a className=\"a-menu\" href=\"#0\" style={{ position: \"relative\" }}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth={2}\r\n                stroke=\"currentColor\"\r\n                className=\"w-6 h-6 svgNavbar\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  d=\"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\"\r\n                />\r\n              </svg>\r\n              {basket.length ? (\r\n                <span className=\"circlebasket\">\r\n                  {basket.reduce((count, item) => count + item.qty, 0)}\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </a>\r\n          </li>\r\n          {/* style={{ marginLeft: \"7rem\" }} */}\r\n          {token ? (\r\n            <li className=\"menu-item\">\r\n              <a\r\n                className=\"a-menu\"\r\n                href=\"#0\"\r\n                style={{ textDecoration: \"none\", fontWeight: \"bold\" }}\r\n              >\r\n                {username}\r\n              </a>\r\n              <ol className=\"sub-menu ol-menu\">\r\n                <li className=\"menu-item\" onClick={() => navigate(\"/profile\")}>\r\n                  <a className=\"a-menu\" href=\"#0\">\r\n                    profile\r\n                  </a>\r\n                </li>\r\n                <li className=\"menu-item\" onClick={() => navigate(\"/Orders\")}>\r\n                  <a className=\"a-menu\" href=\"#0\">\r\n                    order\r\n                  </a>\r\n                </li>\r\n                <li\r\n                  className=\"menu-item\"\r\n                  onClick={() => navigate(\"/setting/changeProfile\")}\r\n                >\r\n                  <a className=\"a-menu\" href=\"#0\">\r\n                    setting\r\n                  </a>\r\n                </li>\r\n                <li\r\n                  className=\"menu-item\"\r\n                  onClick={() => dispatch({ type: \"logOut\" })}\r\n                >\r\n                  <a className=\"a-menu\" href=\"#0\">\r\n                    log out\r\n                  </a>\r\n                </li>\r\n              </ol>\r\n            </li>\r\n          ) : (\r\n            <li className=\"menu-item\" onClick={() => navigate(\"/login\")}>\r\n              <a className=\"a-menu\" href=\"#0\">\r\n                logIn / signUp\r\n              </a>\r\n            </li>\r\n          )}\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",[],"E:\\tamrin\\react1\\my-react\\src\\Home.js",["119"],[],"E:\\tamrin\\react1\\my-react\\src\\Loading.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\Routers.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\OneProduct.js",["120","121"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport Loading from \"./Loading\";\r\nimport \"./OneProduct.css\";\r\nimport Navbar from \"./Navbar\";\r\nimport { isDisabled } from \"@testing-library/user-event/dist/utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction OneProduct() {\r\n  const { _id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [product, setProduct] = useState({});\r\n  const basket = useSelector((state) => state.basket);\r\n  const basket2 = useSelector((state) => state.basket2);\r\n  const dispatch = useDispatch();\r\n\r\n  const getProduct = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `http://kzico.runflare.run/product/${_id}`\r\n      );\r\n      setLoading(false);\r\n      setProduct(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"oneproduct\">\r\n        {loading ? (\r\n          <Loading />\r\n        ) : error ? (\r\n          <Badge bg=\"danger\">error</Badge>\r\n        ) : (\r\n          <div className=\"asliProduct\">\r\n            <Navbar />\r\n\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n            />\r\n            <div id=\"container\">\r\n              <div className=\"product-details\">\r\n                <h1>{product.name}</h1>\r\n                <div className=\"hint-star star\" style={{ fill: \"gold\" }}>\r\n                  <StarRatings\r\n                    fill=\"gold\"\r\n                    rating={product.rating}\r\n                    starDimension=\"15px\"\r\n                    starSpacing=\"3px\"\r\n                  />\r\n                </div>\r\n\r\n                <p className=\"information\">{product.description}</p>\r\n                <p className=\"information\">{product.countInStock}-Available</p>\r\n                <p\r\n                  className=\"information\"\r\n                  style={{ fontWeight: \"bold\", fontSize: \"1.5rem\" }}\r\n                >\r\n                  ${product.price}\r\n                </p>\r\n\r\n                <div className=\"control\">\r\n                  {!basket.filter((item) => item.product === _id).length ? (\r\n                    <button\r\n                      className=\"btn\"\r\n                      style={{ padding: \"0\", marginLeft: \"-10px\" }}\r\n                      onClick={() => {\r\n                        if (product.countInStock) {\r\n                          const help2 = JSON.parse(JSON.stringify(basket2));\r\n                          const help = JSON.parse(JSON.stringify(basket));\r\n                          if (\r\n                            !help.filter((item) => item.product === _id).length\r\n                          ) {\r\n                            help2.push({ ...product, qty: 1 });\r\n                            dispatch({ type: \"add2\", payload: help2 });\r\n                            help.push({ product: product._id, qty: 1 });\r\n                            dispatch({ type: \"add\", payload: help });\r\n                            console.log(help);\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      <span\r\n                        className=\"buy\"\r\n                        style={{\r\n                          backgroundColor: \"#1c0119\",\r\n                          borderRadius: \"10px\",\r\n                          color: \"hsl(314, 100%, 87%)\",\r\n                          paddingLeft: \"20px\",\r\n                          paddingRight: \"20px\",\r\n                          border: \"none\",\r\n                        }}\r\n                      >\r\n                        add to cart\r\n                      </span>\r\n                    </button>\r\n                  ) : (\r\n                    <div className=\"btnclick\">\r\n                      {basket.filter((item) => item.product === _id)[0].qty ===\r\n                      1 ? (\r\n                        <svg\r\n                          onClick={() => {\r\n                            dispatch({\r\n                              type: \"remove\",\r\n                              payload: basket.filter(\r\n                                (item) => item.product !== _id\r\n                              ),\r\n                            });\r\n                            dispatch({\r\n                              type: \"remove2\",\r\n                              payload: basket2.filter(\r\n                                (item) => item._id !== _id\r\n                              ),\r\n                            });\r\n                          }}\r\n                          style={{\r\n                            color: \"rgb(40, 54, 24)\",\r\n                            width: \"1.5rem\",\r\n                            height: \"1.5rem\",\r\n                          }}\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          fill=\"currentColor\"\r\n                          className=\"bi bi-trash\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path\r\n                            d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"\r\n                            fill=\"#283618\"\r\n                          ></path>\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                            fill=\"#283618\"\r\n                          ></path>\r\n                        </svg>\r\n                      ) : (\r\n                        <svg\r\n                          onClick={() => {\r\n                            if (\r\n                              basket.filter((item) => item.product === _id)[0]\r\n                                .qty\r\n                            ) {\r\n                              dispatch({\r\n                                type: \"minus\",\r\n                                payload: basket.map((item) => {\r\n                                  if (item.product === _id) {\r\n                                    return { ...item, qty: item.qty - 1 };\r\n                                  }\r\n                                  return item;\r\n                                }),\r\n                              });\r\n                              dispatch({\r\n                                type: \"minus2\",\r\n                                payload: basket2.map((item) => {\r\n                                  if (item._id === _id) {\r\n                                    return { ...item, qty: item.qty - 1 };\r\n                                  }\r\n                                  return item;\r\n                                }),\r\n                              });\r\n                            }\r\n                          }}\r\n                          style={{\r\n                            color: \"rgb(40, 54, 24)\",\r\n                            width: \"1.5rem\",\r\n                            height: \"1.5rem\",\r\n                          }}\r\n                          viewBox=\"0 0 15 15\"\r\n                          fill=\"none\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          className=\"bi bi-trash\"\r\n                        >\r\n                          <path\r\n                            fillRule=\"evenodd\"\r\n                            clipRule=\"evenodd\"\r\n                            d=\"M11 8H4V7H11V8Z\"\r\n                            fill=\"#283618\"\r\n                          ></path>\r\n                        </svg>\r\n                      )}\r\n                      <span>\r\n                        {basket.filter((item) => item.product === _id)[0].qty}\r\n                      </span>\r\n                      <svg\r\n                        onClick={() => {\r\n                          if (\r\n                            basket.filter((item) => item.product === _id)[0]\r\n                              .qty < product.countInStock\r\n                          ) {\r\n                            dispatch({\r\n                              type: \"plus\",\r\n                              payload: basket.map((item) => {\r\n                                if (item.product === _id) {\r\n                                  return { ...item, qty: item.qty + 1 };\r\n                                }\r\n                                return item;\r\n                              }),\r\n                            });\r\n                            dispatch({\r\n                              type: \"plus2\",\r\n                              payload: basket2.map((item) => {\r\n                                if (item._id === _id) {\r\n                                  return { ...item, qty: item.qty + 1 };\r\n                                }\r\n                                return item;\r\n                              }),\r\n                            });\r\n                          }\r\n                        }}\r\n                        style={{\r\n                          color: \"rgb(40, 54, 24)\",\r\n                          width: \"1.5rem\",\r\n                          height: \"1.5rem\",\r\n                        }}\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-plus\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\r\n                          fill=\"#283618\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                className=\"product-image img\"\r\n                style={{\r\n                  backgroundImage: `url(${product.image})`,\r\n                  backgroundSize: \"contain\",\r\n                  backgroundPosition: \"center\",\r\n                  backgroundRepeat: \"no-repeat\",\r\n                }}\r\n              >\r\n                {/* <img className=\"img\"\r\n                  src=\"https://images.unsplash.com/photo-1606830733744-0ad778449672?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mzl8fGNocmlzdG1hcyUyMHRyZWV8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\r\n                  alt=\"\"\r\n                /> */}\r\n\r\n                <div className=\"info\">\r\n                  <h2 className=\"h2product\" style={{ marginTop: \"80px\" }}>\r\n                    Description\r\n                  </h2>\r\n                  <ul className=\"ulproduct\">\r\n                    <li className=\"liproduct\">\r\n                      <strong>category : </strong>\r\n                      {product.category}\r\n                    </li>\r\n                    <li>\r\n                      <strong>color : </strong>\r\n                      {product.color}\r\n                    </li>\r\n                    <li>\r\n                      <strong>brand: </strong>\r\n                      {product.brand}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneProduct;\r\n","E:\\tamrin\\react1\\my-react\\src\\ShoppingCart.js",["122","123"],[],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./ShoppingCart.css\";\r\n\r\nfunction ShoppingCart() {\r\n  const { token } = useSelector((state) => state.info);\r\n  const basket = useSelector((state) => state.basket);\r\n  const basket2 = useSelector((state) => state.basket2);\r\n  const dispatch = useDispatch();\r\n  const Navigate = useNavigate();\r\n\r\n  console.log(basket);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {basket2.length ? (\r\n        <div className=\"htmlcart\">\r\n          <div className=\"shopping-carts\">\r\n            <div\r\n              className=\"titles\"\r\n              style={{\r\n                backgroundColor: \"#1c0119\",\r\n                color: \"white\",\r\n                borderRadius: \"0.5rem 0.5rem 0 0 \",\r\n              }}\r\n            >\r\n              Shopping Bag\r\n            </div>\r\n            {basket2.map((item, index) => {\r\n              console.log(basket);\r\n              return (\r\n                <div className=\"item\">\r\n                  <div className=\"buttons\">\r\n                    <span className=\"delete-btn\"></span>\r\n                    {/* <span className=\"like-btn\"></span> */}\r\n                  </div>\r\n\r\n                  <div className=\"image\">\r\n                    <div\r\n                      style={{\r\n                        backgroundImage: `url(${item.image})`,\r\n\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        backgroundSize: \"contain\",\r\n                        backgroundPosition: \"center\",\r\n                        width: \"100px\",\r\n                        height: \"100px\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n\r\n                  <div className=\"description\">\r\n                    <span>{item.name}</span>\r\n                    <span>{item.color}</span>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"btnclick\"\r\n                    style={{\r\n                      width: \"20%\",\r\n                      boxShadow: \"none\",\r\n                      // backgroundColor: \"#fafafa\",\r\n                      height: \"60%\",\r\n                    }}\r\n                  >\r\n                    {item.qty === 1 ? (\r\n                      <svg\r\n                        onClick={() => {\r\n                          Swal.fire({\r\n                            title: \"Are you sure?\",\r\n\r\n                            icon: \"warning\",\r\n                            showCancelButton: true,\r\n                            confirmButtonColor: \"#445128\",\r\n                            cancelButtonColor: \"#820000\",\r\n                            confirmButtonText: \"Yes, delete it!\",\r\n                          }).then((result) => {\r\n                            if (result.isConfirmed) {\r\n                              const help2 = JSON.parse(JSON.stringify(basket2));\r\n                              const help = JSON.parse(JSON.stringify(basket));\r\n                              help2.splice(index, 1);\r\n                              help.splice(index, 1);\r\n                              dispatch({\r\n                                type: \"plus\",\r\n                                payload: [...help],\r\n                              });\r\n                              dispatch({\r\n                                type: \"plus2\",\r\n                                payload: [...help2],\r\n                              });\r\n                              Swal.fire(\r\n                                \"Deleted!\",\r\n                                \"Your order has been deleted.\",\r\n                                \"success\"\r\n                              );\r\n                            }\r\n                          });\r\n                        }}\r\n                        style={{\r\n                          color: \"rgb(40, 54, 24)\",\r\n                          width: \"1.5rem\",\r\n                          height: \"1.5rem\",\r\n                        }}\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"currentColor\"\r\n                        className=\"bi bi-trash\"\r\n                        viewBox=\"0 0 16 16\"\r\n                      >\r\n                        <path\r\n                          d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"\r\n                          fill=\"#283618\"\r\n                        ></path>\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                          fill=\"#283618\"\r\n                        ></path>\r\n                      </svg>\r\n                    ) : (\r\n                      <svg\r\n                        onClick={() => {\r\n                          const help2 = JSON.parse(JSON.stringify(basket2));\r\n                          const help = JSON.parse(JSON.stringify(basket));\r\n                          help2[index].qty -= 1;\r\n                          help[index].qty -= 1;\r\n                          dispatch({\r\n                            type: \"plus\",\r\n                            payload: [...help],\r\n                          });\r\n                          dispatch({\r\n                            type: \"plus2\",\r\n                            payload: [...help2],\r\n                          });\r\n                        }}\r\n                        style={{\r\n                          color: \"rgb(40, 54, 24)\",\r\n                          width: \"1.5rem\",\r\n                          height: \"1.5rem\",\r\n                        }}\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"bi bi-trash\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          clipRule=\"evenodd\"\r\n                          d=\"M11 8H4V7H11V8Z\"\r\n                          fill=\"#283618\"\r\n                        ></path>\r\n                      </svg>\r\n                    )}\r\n\r\n                    <span>{item.qty}</span>\r\n                    <svg\r\n                      onClick={() => {\r\n                        if (item.qty < item.countInStock) {\r\n                          const help2 = JSON.parse(JSON.stringify(basket2));\r\n                          const help = JSON.parse(JSON.stringify(basket));\r\n                          help2[index].qty += 1;\r\n                          help[index].qty += 1;\r\n                          dispatch({\r\n                            type: \"plus\",\r\n                            payload: [...help],\r\n                          });\r\n                          dispatch({\r\n                            type: \"plus2\",\r\n                            payload: [...help2],\r\n                          });\r\n                        }\r\n                      }}\r\n                      style={{\r\n                        color: \"rgb(40, 54, 24)\",\r\n                        width: \"1.5rem\",\r\n                        height: \"1.5rem\",\r\n                      }}\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"currentColor\"\r\n                      className=\"bi bi-plus\"\r\n                      viewBox=\"0 0 16 16\"\r\n                    >\r\n                      <path\r\n                        d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\r\n                        fill=\"#283618\"\r\n                      ></path>\r\n                    </svg>\r\n                  </div>\r\n                  <div className=\"total-price\">${item.qty * item.price}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            className=\"grid_12 summary\"\r\n            style={{\r\n              width: \"750px\",\r\n              margin: \"0rem auto\",\r\n              marginBottom: \"4rem\",\r\n              marginTop: \"-3.5rem\",\r\n              boxShadow: \"0px 0px 5px 5px rgb(0 0 0 / 10%)\",\r\n              borderRadius: \"0.5rem\",\r\n            }}\r\n          >\r\n            <div className=\"inner_container\">\r\n              {/* <div\r\n                className=\"titles\"\r\n                style={{\r\n                  height: \"45px\",\r\n                  paddingTop: \"0.5rem\",\r\n                  paddingBottom: \"1.5rem\",\r\n                  backgroundColor: \"#1c0119\",\r\n                  color: \"white\",\r\n                  borderRadius: \"0.5rem 0.5rem 0 0 \",\r\n                }}\r\n              ></div> */}\r\n              <div className=\"summary-content\" style={{ padding: \"1rem\" }}>\r\n                <div\r\n                  className=\"col_1of2 meta-data\"\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <div className=\"sub-total\" style={{ margin: \"20px auto\" }}>\r\n                    <em style={{ fontWeight: \"bold\" }}>Sub Total: </em>\r\n                    <span className=\"amount\"></span>\r\n                  </div>\r\n                  <div\r\n                    className=\"sub-total\"\r\n                    style={{ margin: \"20px auto\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <em>\r\n                      $\r\n                      {basket2.reduce(\r\n                        (total, item) => total + item.price * item.qty,\r\n                        0\r\n                      )}\r\n                    </em>\r\n                    <span className=\"amount\"></span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col_1of2\">\r\n                  <div className=\"total\">\r\n                    <span className=\"amount\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div\r\n                  className=\"btn-summary\"\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n                    paddingBottom: \"2rem\",\r\n                  }}\r\n                >\r\n                  <button\r\n                    href=\"#\"\r\n                    className=\"btn-checkout btn-reverse buttonshop\"\r\n                    style={{\r\n                      width: \"150px\",\r\n                      height: \"30px\",\r\n                      boxShadow: \"grey 2px 2px 9px 1px\",\r\n                    }}\r\n                  >\r\n                    Continue Shopping\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => Navigate(\"/Address\")}\r\n                    href=\"#\"\r\n                    className=\"btn-checkout buttonshop\"\r\n                    style={{\r\n                      border: \"none\",\r\n                      width: \"100px\",\r\n                      height: \"30px\",\r\n                      boxShadow: \"grey 2px 2px 9px 1px\",\r\n                      backgroundColor: \"#E1E8EE\",\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"500px\",\r\n            alignItems: \"center\",\r\n            fontSize: \"5rem\",\r\n          }}\r\n        >\r\n          buy something :|\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShoppingCart;\r\n","E:\\tamrin\\react1\\my-react\\src\\LoginSignup.js",["124","125","126","127","128","129","130"],[],"import React, { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./LoginSignup.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginSignup() {\r\n  const emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n  const [name, setName] = useState(\"\");\r\n  const [name2, setName2] = useState(false);\r\n  const [namelogin, setNamelogin] = useState(\"\");\r\n  const [namelogin2, setNamelogin2] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [email2, setEmail2] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(false);\r\n  const [passwordlogin, setPasswordlogin] = useState(\"\");\r\n  const [passwordlogin2, setPasswordlogin2] = useState(false);\r\n  const [cofrimPassword, setConfrimPassword] = useState(\"\");\r\n  const [cofrimPassword2, setConfrimPassword2] = useState(false);\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [mobile2, setMobile2] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const login = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://kzico.runflare.run/user/login\",\r\n        {\r\n          email: namelogin,\r\n          password: passwordlogin,\r\n        }\r\n      );\r\n      toast.success(\"Login was successful\", {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n\r\n      dispatch({ type: \"login\", payload: data.user });\r\n      localStorage.setItem(\"info\", JSON.stringify(data.user));\r\n      setTimeout(() => {\r\n        Navigate(\"/\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      // console.log(error.response.data.massage);\r\n      toast.error(error.response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const signUp = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://kzico.runflare.run/user/signup\",\r\n        {\r\n          username: name,\r\n          email: email,\r\n          password: password,\r\n          mobile: mobile,\r\n        }\r\n      );\r\n      toast.success(\"sign up was successful\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    } catch (error) {\r\n      toast.error(error.response.data.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar />\r\n        <div>\r\n          <div className=\"bodyLogin\" style={{ marginTop: \"25px\" }}>\r\n            {/* <head>\r\n      <title>Slide Navbar</title>\r\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"slide navbar style.css\">\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap\" rel=\"stylesheet\">\r\n  </head> */}\r\n\r\n            <div className=\"main\">\r\n              <input\r\n                className=\"inputlogin\"\r\n                type=\"checkbox\"\r\n                id=\"chk\"\r\n                aria-hidden=\"true\"\r\n              />\r\n\r\n              <div className=\"signup\">\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                  }}\r\n                >\r\n                  <label\r\n                    className=\"labellogin\"\r\n                    htmlFor=\"chk\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    Sign up\r\n                  </label>\r\n                  <input\r\n                    style={{ border: name2 && \" 1px solid red\" }}\r\n                    // value={name}\r\n                    className=\"inputlogin\"\r\n                    type=\"text\"\r\n                    name=\"txt\"\r\n                    placeholder=\"User name\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setName(e.target.value);\r\n                    }}\r\n                    onBlur={() => {\r\n                      if (name.length < 8) {\r\n                        setName2(true);\r\n                        toast.error(\r\n                          \"your username must be more than 8 characters \",\r\n                          {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: \"light\",\r\n                          }\r\n                        );\r\n                      }\r\n                    }}\r\n                    onFocus={() => {\r\n                      setName2(false);\r\n                    }}\r\n                  />\r\n                  <input\r\n                    // value={email}\r\n                    style={{ border: email2 && \" 1px solid red\" }}\r\n                    className=\"inputlogin\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setEmail(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      if (!emailRegex.test(e.target.value)) {\r\n                        setEmail2(true);\r\n                        toast.error(\"your email is not currect\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 5000,\r\n                          hideProgressBar: true,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }\r\n                    }}\r\n                    onFocus={() => setEmail2(false)}\r\n                  />\r\n                  <input\r\n                    // value={password}\r\n                    style={{ border: password2 && \" 1px solid red\" }}\r\n                    className=\"inputlogin\"\r\n                    type=\"password\"\r\n                    name=\"pswd\"\r\n                    placeholder=\"Password\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setPassword(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      if (!passwordRegex.test(e.target.value)) {\r\n                        setPassword2(true);\r\n                        toast.error(\r\n                          \"your password must contain upper & lower case latters , numbers\",\r\n                          {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: \"light\",\r\n                          }\r\n                        );\r\n                      }\r\n                    }}\r\n                    onFocus={() => setPassword2(false)}\r\n                  />\r\n                  <input\r\n                    // value={cofrimPassword}\r\n                    style={{ border: cofrimPassword2 && \" 1px solid red\" }}\r\n                    className=\"inputlogin\"\r\n                    type=\"password\"\r\n                    name=\"pswd\"\r\n                    placeholder=\"Confrim Password\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setConfrimPassword(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      if (password != e.target.value) {\r\n                        setConfrimPassword2(true);\r\n                        toast.error(\r\n                          \"password & confrim password does not match\",\r\n                          {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: \"light\",\r\n                          }\r\n                        );\r\n                      }\r\n                    }}\r\n                    onFocus={() => setConfrimPassword2(false)}\r\n                  />\r\n                  <input\r\n                    // value={mobile}\r\n                    style={{ border: mobile2 && \" 1px solid red\" }}\r\n                    className=\"inputlogin\"\r\n                    type=\"tel\"\r\n                    name=\"pswd\"\r\n                    placeholder=\"mobile\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setMobile(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      if (mobile.length != 11) {\r\n                        setMobile2(true);\r\n                        toast.error(\"your phone number must be 11 digit long\", {\r\n                          position: \"top-right\",\r\n                          autoClose: 5000,\r\n                          hideProgressBar: true,\r\n                          closeOnClick: true,\r\n                          pauseOnHover: true,\r\n                          draggable: true,\r\n                          progress: undefined,\r\n                          theme: \"light\",\r\n                        });\r\n                      }\r\n                    }}\r\n                    onFocus={() => setMobile2(false)}\r\n                  />\r\n                  <button\r\n                    className=\"buttonlogin\"\r\n                    onClick={() => {\r\n                      if (\r\n                        name.length > 7 &&\r\n                        passwordRegex.test(password) &&\r\n                        emailRegex.test(email) &&\r\n                        mobile.length == 11\r\n                      ) {\r\n                        signUp();\r\n                      } else {\r\n                        console.log(\"error button sign up\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    Sign up\r\n                  </button>\r\n                </form>\r\n              </div>\r\n\r\n              <div className=\"login\">\r\n                <form onSubmit={(e) => e.preventDefault()}>\r\n                  <label\r\n                    className=\"labellogin\"\r\n                    htmlFor=\"chk\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    Login\r\n                  </label>\r\n                  <input\r\n                    style={{ border: namelogin2 && \" 1px solid red\" }}\r\n                    // value={namelogin}\r\n                    className=\"inputlogin\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"username\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setNamelogin(e.target.value);\r\n                    }}\r\n                    onBlur={() => {\r\n                      if (namelogin.length < 8) {\r\n                        setNamelogin2(true);\r\n                        toast.error(\r\n                          \"your username must be more than 8 characters \",\r\n                          {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: \"light\",\r\n                          }\r\n                        );\r\n                      }\r\n                    }}\r\n                    onFocus={() => {\r\n                      setNamelogin2(false);\r\n                    }}\r\n                  />\r\n                  <input\r\n                    style={{ border: passwordlogin2 && \" 1px solid red\" }}\r\n                    // value={passwordlogin}\r\n                    className=\"inputlogin\"\r\n                    type=\"password\"\r\n                    name=\"pswd\"\r\n                    placeholder=\"Password\"\r\n                    required=\"\"\r\n                    onChange={(e) => {\r\n                      setPasswordlogin(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      if (!passwordRegex.test(e.target.value)) {\r\n                        setPasswordlogin2(true);\r\n                        toast.error(\r\n                          \"your password must contain upper & lower case latters , numbers\",\r\n\r\n                          {\r\n                            position: \"top-right\",\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: \"light\",\r\n                          }\r\n                        );\r\n                      }\r\n                    }}\r\n                    onFocus={() => {\r\n                      setPasswordlogin2(false);\r\n                    }}\r\n                  />\r\n                  <button\r\n                    className=\"buttonlogin\"\r\n                    onClick={() => {\r\n                      if (\r\n                        namelogin.length > 7 &&\r\n                        passwordRegex.test(passwordlogin)\r\n                      ) {\r\n                        login();\r\n                      } else {\r\n                        console.log(\"error button login\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginSignup;\r\n","E:\\tamrin\\react1\\my-react\\src\\Address.js",["131","132","133","134","135"],[],"E:\\tamrin\\react1\\my-react\\src\\CheckOut.js",["136","137","138"],[],"E:\\tamrin\\react1\\my-react\\src\\Setting.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\ChangeProfile.js",["139"],[],"E:\\tamrin\\react1\\my-react\\src\\UploadAvatar.js",["140"],[],"E:\\tamrin\\react1\\my-react\\src\\ChangePassword.js",["141"],[],"E:\\tamrin\\react1\\my-react\\src\\store.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\reducer.js",[],[],"E:\\tamrin\\react1\\my-react\\src\\Profile.js",["142"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./Profile.css\";\r\n\r\nfunction Profile() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [profile, setProfile] = useState({});\r\n  const { token } = useSelector((state) => state.info);\r\n  const getProfile = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        \"http://kzico.runflare.run/user/profile\",\r\n        {\r\n          headers: {\r\n            authorization: `bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setProfile(data);\r\n      //   console.log(profile);\r\n    } catch (error) {\r\n      //   console.log(error);\r\n      setError(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Badge bg=\"danger\">error</Badge>\r\n      ) : (\r\n        <div>\r\n          <Navbar />\r\n\r\n          <div className=\"profileorg\">\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://use.fontawesome.com/releases/v5.15.4/css/all.css\"\r\n              integrity=\"sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm\"\r\n              crossorigin=\"anonymous\"\r\n            />\r\n            <div class=\"cardpro\">\r\n              <div class=\"textpro\">\r\n                <img src={profile.user?.image} alt=\"\" />\r\n                <h4>{profile.user?.username}</h4>\r\n                <p\r\n                  style={{\r\n                    borderBottom: \"1px solid #ccc\",\r\n                    paddingBottom: \"20px\",\r\n                    marginBottom: \"5px\",\r\n                  }}\r\n                >\r\n                  {profile.user?.email}\r\n                </p>\r\n                <p>\r\n                  mobile :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.mobile}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  first name :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.firstname}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  last name :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.lastname}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  gender :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.gender}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  age :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.age}\r\n                  </span>\r\n                </p>\r\n                <p>\r\n                  city :\r\n                  <span style={{ fontWeight: \"bold\" }}>\r\n                    {profile.user?.city}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\tamrin\\react1\\my-react\\src\\Orders.js",["143","144"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./Orders.css\";\r\n\r\nfunction Orders() {\r\n  const { token } = useSelector((state) => state.info);\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const Navigate = useNavigate();\r\n\r\n  const getOrder = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\"http://kzico.runflare.run/order/\", {\r\n        headers: {\r\n          authorization: `bearer ${token}`,\r\n        },\r\n      });\r\n      setLoading(false);\r\n      setOrders(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error.response.data.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrder();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Badge bg=\"danger\">{error}</Badge>\r\n      ) : (\r\n        <div className=\"orderorg\">\r\n          <div\r\n            className=\"table-wrapper\"\r\n            style={{\r\n              boxShadow: \"rgba(0, 0, 0, 0.15) 0px 5px 15px 0px\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"table-row table-header\"\r\n              style={{ borderRadius: \"10px 10px 2px 5px\" }}\r\n            >\r\n              <div className=\"col-wrapper order-date-number-po\">\r\n                <div className=\"table-col order-date\">Items</div>\r\n                <div className=\"table-col order-date\">payment Method</div>\r\n                <div className=\"table-col order-date\">totalPrice</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"table-row\">\r\n              {orders.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => Navigate(`/Orders/${item._id}`)}\r\n                    className=\"col-wrapper order-date-number-po\"\r\n                  >\r\n                    <div className=\"table-col order-date order\">\r\n                      {item.orderItems.reduce((sum, item) => sum + item.qty, 0)}\r\n                    </div>\r\n                    <div className=\"table-col order-date order\">\r\n                      {item.paymentMethod}\r\n                    </div>\r\n                    <div className=\"table-col order-date order\">\r\n                      ${item.totalPrice}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","E:\\tamrin\\react1\\my-react\\src\\OneOrder.js",["145","146","147","148"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./OneOrder.css\";\r\n\r\nfunction OneOrder() {\r\n  const { token } = useSelector((state) => state.info);\r\n  const [orders, setOrders] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const { _id } = useParams();\r\n  const Navigate = useNavigate();\r\n\r\n  const getOneOrder = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `http://kzico.runflare.run/order/${_id}`,\r\n        {\r\n          headers: {\r\n            authorization: `bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setLoading(false);\r\n      setOrders(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setError(error.response.data.message);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getOneOrder();\r\n    console.log(orders);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {loading ? (\r\n        <Loading />\r\n      ) : error ? (\r\n        <Badge bg=\"danger\">{error}</Badge>\r\n      ) : (\r\n        <div className=\"oneorder\">\r\n          <div className=\"container-fluid px-0 bg-black\">\r\n            <div className=\"container px-0\"></div>\r\n          </div>\r\n          <div className=\"container mt-3 mt-md-5\">\r\n            <h2 className=\"text-charcoal hidden-sm-down\">Your Orders</h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-10\">\r\n                <div className=\"list-group mb-5\">\r\n                  <div\r\n                    className=\"list-group-item p-3 bg-snow\"\r\n                    style={{ position: \"relative\" }}\r\n                  >\r\n                    <div className=\"row w-100 no-gutters\">\r\n                      <div className=\"col-6 col-md\">\r\n                        <h6 className=\"text-charcoal mb-0 w-100\">\r\n                          payment Method\r\n                        </h6>\r\n                        <a\r\n                          href=\"\"\r\n                          className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\"\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          {orders.paymentMethod}\r\n                        </a>\r\n                      </div>\r\n\r\n                      <div className=\"col-6 col-md\">\r\n                        <h6 className=\"text-charcoal mb-0 w-100\">Total</h6>\r\n                        <p className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\">\r\n                          ${orders.totalPrice}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-6 col-md\">\r\n                        <h6 className=\"text-charcoal mb-0 w-100\">Shipped To</h6>\r\n                        <p className=\"text-pebble mb-0 w-100 mb-2 mb-md-0\">\r\n                          {orders.shippingAddress?.address}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list-group-item p-3 bg-white\">\r\n                    {orders.orderItems?.map((item) => {\r\n                      return (\r\n                        <div\r\n                          className=\"row no-gutters\"\r\n                          // style={{ width: \"150%\" }}\r\n                        >\r\n                          <div className=\"col-12 col-md-9 pr-0 pr-md-3\"></div>\r\n\r\n                          <div className=\"row no-gutters mt-3\">\r\n                            <div className=\"col-4 col-md-1\">\r\n                              <div\r\n                                style={{\r\n                                  backgroundImage: `url(${item.product.image})`,\r\n\r\n                                  backgroundRepeat: \"no-repeat\",\r\n                                  backgroundSize: \"contain\",\r\n                                  backgroundPosition: \"center\",\r\n                                  width: \"100px\",\r\n                                  height: \"100px\",\r\n                                  marginLeft: \"3rem\",\r\n                                }}\r\n                              ></div>\r\n\r\n                              {/* <img\r\n                                className=\"img-fluid pr-3\"\r\n                                src=\"https://tanga2.imgix.net/https%3A%2F%2Fs3.amazonaws.com%2Ftanga-images%2Ffc79d08c12dc.jpeg?ixlib=rails-2.1.1&fit=crop&w=500&h=500&auto=format%2Ccompress&cs=srgb&s=c9a50d474788f2658d13b21aa62edd6c\"\r\n                                alt=\"\"\r\n                              /> */}\r\n                            </div>\r\n                            <div\r\n                              className=\"col-10 col-md-8 pr-0 pr-md-3\"\r\n                              style={{ width: \"25rem\", marginLeft: \"10rem\" }}\r\n                            >\r\n                              <h6 className=\"text-charcoal mb-2 mb-md-1\">\r\n                                <a href=\"\" className=\"text-charcoal\">\r\n                                  {item.product.name}\r\n                                </a>\r\n                              </h6>\r\n                              <ul className=\"list-unstyled text-pebble mb-2 small\">\r\n                                <li className=\"\">\r\n                                  <b>Color:</b> {item.product.color}\r\n                                </li>\r\n                                <li className=\"\">\r\n                                  <b>brand:</b> {item.product.brand}\r\n                                </li>\r\n                              </ul>\r\n                              <h6 className=\"text-charcoal text-left mb-0 mb-md-2\">\r\n                                <b>${item.product.price}</b>\r\n                              </h6>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneOrder;\r\n",{"ruleId":"149","severity":1,"message":"150","line":13,"column":15,"nodeType":"151","messageId":"152","endLine":13,"endColumn":19},{"ruleId":"153","severity":1,"message":"154","line":29,"column":6,"nodeType":"155","endLine":29,"endColumn":8,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":86,"column":33,"nodeType":"160","endLine":86,"endColumn":62},{"ruleId":"149","severity":1,"message":"161","line":9,"column":10,"nodeType":"151","messageId":"152","endLine":9,"endColumn":20},{"ruleId":"153","severity":1,"message":"162","line":37,"column":6,"nodeType":"155","endLine":37,"endColumn":8,"suggestions":"163"},{"ruleId":"149","severity":1,"message":"164","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"149","severity":1,"message":"165","line":9,"column":11,"nodeType":"151","messageId":"152","endLine":9,"endColumn":16},{"ruleId":"149","severity":1,"message":"164","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":10,"column":28,"nodeType":"168","messageId":"169","endLine":10,"endColumn":29,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"171","line":22,"column":10,"nodeType":"151","messageId":"152","endLine":22,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":71,"column":15,"nodeType":"151","messageId":"152","endLine":71,"endColumn":19},{"ruleId":"172","severity":1,"message":"173","line":241,"column":36,"nodeType":"174","messageId":"175","endLine":241,"endColumn":38},{"ruleId":"172","severity":1,"message":"173","line":272,"column":41,"nodeType":"174","messageId":"175","endLine":272,"endColumn":43},{"ruleId":"172","severity":1,"message":"176","line":295,"column":39,"nodeType":"174","messageId":"175","endLine":295,"endColumn":41},{"ruleId":"149","severity":1,"message":"164","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":64,"column":45,"nodeType":"174","messageId":"175","endLine":64,"endColumn":47},{"ruleId":"172","severity":1,"message":"176","line":103,"column":47,"nodeType":"174","messageId":"175","endLine":103,"endColumn":49},{"ruleId":"172","severity":1,"message":"176","line":144,"column":45,"nodeType":"174","messageId":"175","endLine":144,"endColumn":47},{"ruleId":"172","severity":1,"message":"176","line":185,"column":45,"nodeType":"174","messageId":"175","endLine":185,"endColumn":47},{"ruleId":"149","severity":1,"message":"164","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":20,"column":15,"nodeType":"151","messageId":"152","endLine":20,"endColumn":19},{"ruleId":"153","severity":1,"message":"177","line":73,"column":6,"nodeType":"155","endLine":73,"endColumn":8,"suggestions":"178"},{"ruleId":"149","severity":1,"message":"150","line":22,"column":15,"nodeType":"151","messageId":"152","endLine":22,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":16,"column":15,"nodeType":"151","messageId":"152","endLine":16,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":18,"column":15,"nodeType":"151","messageId":"152","endLine":18,"endColumn":19},{"ruleId":"153","severity":1,"message":"179","line":35,"column":6,"nodeType":"155","endLine":35,"endColumn":8,"suggestions":"180"},{"ruleId":"149","severity":1,"message":"164","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":18},{"ruleId":"153","severity":1,"message":"181","line":36,"column":6,"nodeType":"155","endLine":36,"endColumn":8,"suggestions":"182"},{"ruleId":"149","severity":1,"message":"183","line":16,"column":9,"nodeType":"151","messageId":"152","endLine":16,"endColumn":17},{"ruleId":"153","severity":1,"message":"184","line":40,"column":6,"nodeType":"155","endLine":40,"endColumn":8,"suggestions":"185"},{"ruleId":"158","severity":1,"message":"159","line":67,"column":25,"nodeType":"160","endLine":71,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":125,"column":33,"nodeType":"160","endLine":125,"endColumn":70},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getProfile' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["186"],"'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isDisabled' is defined but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["187"],"'Navigate' is defined but never used.","'token' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["188","189"],"'cofrimPassword' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'basket2'. Either include it or remove the dependency array.",["190"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["192"],"'Navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOneOrder' and 'orders'. Either include them or remove the dependency array.",["193"],{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"messageId":"198","fix":"199","desc":"200"},{"messageId":"201","fix":"202","desc":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [getProfile, token]",{"range":"212","text":"213"},"Update the dependencies array to be: [getProduct]",{"range":"214","text":"215"},"removeEscape",{"range":"216","text":"217"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"218","text":"219"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [basket2]",{"range":"220","text":"221"},"Update the dependencies array to be: [getProfile]",{"range":"222","text":"223"},"Update the dependencies array to be: [getOrder]",{"range":"224","text":"225"},"Update the dependencies array to be: [getOneOrder, orders]",{"range":"226","text":"227"},[782,784],"[getProfile, token]",[1148,1150],"[getProduct]",[346,347],"",[346,346],"\\",[2089,2091],"[basket2]",[980,982],"[getProfile]",[1037,1039],"[getOrder]",[1145,1147],"[getOneOrder, orders]"]